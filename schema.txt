create table if not exists `delivery_partner` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `name` varchar(255) not null,
    `contact_number` varchar(20),
    `email` varchar(255),
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp
);

create table if not exists `notification` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint not null,
    `type` enum('cart', 'delivery', 'order', 'promotion', 'system') default 'system',
    `title` varchar(255),
    `message` text not null,
    `is_read` boolean default false,
    `sent_at` datetime not null default current_timestamp,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`)
);

create table if not exists `notification_log` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `notification_id` bigint not null,
    `status` enum('failed', 'sent') default 'sent',
    `attempted_at` datetime not null default current_timestamp,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`notification_id`) references `notification` (`id`)
);

create table if not exists `notification_setting` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint not null,
    `email_notifications` boolean default true,
    `sms_notifications` boolean default false,
    `push_notifications` boolean default true,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`)
);

create table if not exists `order` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint not null,
    `total_amount` decimal(12, 2) not null,
    `status` enum('canceled', 'confirmed', 'delivered', 'pending', 'returned', 'shipped') default 'pending',
    `date` datetime not null default current_timestamp,
    `shipping_address_id` bigint not null,
    `billing_address_id` bigint not null,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`),
    foreign key (`shipping_address_id`) references `user_address` (`id`),
    foreign key (`billing_address_id`) references `user_address` (`id`)
);

create table if not exists `order_item` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `order_id` bigint not null,
    `product_id` bigint not null,
    `seller_id` bigint not null,
    `quantity` int not null,
    `unit_price` decimal(10, 2) not null,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`order_id`) references `order` (`id`),
    foreign key (`product_id`) references `product` (`id`),
    foreign key (`seller_id`) references `seller_profile` (`id`)
);

create table if not exists `order_payment` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `order_id` bigint not null,
    `payment_id` bigint not null,
    `amount` decimal(12, 2) not null,
    `payment_date` datetime not null default current_timestamp,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`order_id`) references `order` (`id`),
    foreign key (`payment_id`) references `payment_transaction` (`id`)
);

create table if not exists `order_status` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `order_id` bigint not null,
    `status` enum('canceled', 'confirmed', 'delivered', 'pending', 'returned', 'shipped') not null,
    `changed_at` datetime not null default current_timestamp,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`order_id`) references `order` (`id`)
);

create table if not exists `page_view` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint,
    `session_id` bigint,
    `url` varchar(2048) not null,
    `view_date` datetime not null default current_timestamp,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`),
    foreign key (`session_id`) references `user_session` (`id`)
);

create table if not exists `payment_method` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint not null,
    `type` enum('credit_card', 'debit_card', 'net_banking', 'upi', 'wallet') not null,
    `details` text not null,
    `is_default` boolean default false,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`)
);

create table if not exists `payment_transaction` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint not null,
    `method_id` bigint not null,
    `transaction_amount` decimal(12, 2) not null,
    `transaction_date` datetime not null default current_timestamp,
    `status` enum('failed', 'pending', 'refunded', 'success') default 'pending',
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`),
    foreign key (`method_id`) references `payment_method` (`id`)
);

create table if not exists `product` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `name` varchar(255) not null,
    `description` text,
    `base_price` decimal(10, 2) not null,
    `status` enum('active', 'inactive') default 'active',
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp
);

create table if not exists `product_attribute` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `product_id` bigint not null,
    `attribute_name` varchar(100) not null,
    `attribute_value` varchar(255) not null,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`product_id`) references `product` (`id`)
);

create table if not exists `product_category` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `name` varchar(100) not null unique key,
    `parent_category_id` bigint,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`parent_category_id`) references `product_category` (`id`)
);

create table if not exists `product_category_map` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `product_id` bigint not null,
    `category_id` bigint not null,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    constraint `unique_product_category` unique (`product_id`, `category_id`),
    foreign key (`product_id`) references `product` (`id`),
    foreign key (`category_id`) references `product_category` (`id`)
);

create table if not exists `product_image` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `product_id` bigint not null,
    `url` varchar(2048) not null,
    `alt_text` varchar(255),
    `is_primary` boolean default false,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`product_id`) references `product` (`id`)
);

create table if not exists `product_review` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `product_id` bigint not null,
    `user_id` bigint not null,
    `rating` tinyint not null,
    `title` varchar(255),
    `review_text` text,
    `review_date` datetime not null default current_timestamp,
    `status` enum('approved', 'pending', 'rejected') default 'pending',
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`product_id`) references `product` (`id`),
    foreign key (`user_id`) references `user_profile` (`id`)
);

create table if not exists `question_answer` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `product_id` bigint not null,
    `user_id` bigint not null,
    `text` text not null,
    `answer_text` text,
    `date` datetime not null default current_timestamp,
    `answer_date` datetime default null,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`product_id`) references `product` (`id`),
    foreign key (`user_id`) references `user_profile` (`id`)
);

create table if not exists `refund` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `payment_transaction_id` bigint not null,
    `amount` decimal(12, 2) not null,
    `date` datetime not null default current_timestamp,
    `status` enum('failed', 'pending', 'processed') default 'pending',
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`payment_transaction_id`) references `payment_transaction` (`id`)
);

create table if not exists `return_request` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `order_item_id` bigint not null,
    `reason` varchar(255),
    `status` enum('approved', 'completed', 'rejected', 'requested') default 'requested',
    `request_date` datetime not null default current_timestamp,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`order_item_id`) references `order_item` (`id`)
);

create table if not exists `review_vote` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `review_id` bigint not null,
    `user_id` bigint not null,
    `vote_type` enum('helpful', 'unhelpful') not null,
    `vote_date` datetime not null default current_timestamp,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`review_id`) references `product_review` (`id`),
    foreign key (`user_id`) references `user_profile` (`id`)
);

create table if not exists `search_query` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint,
    `query_text` varchar(255) not null,
    `date` datetime not null default current_timestamp,
    `result_count` int default 0,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`)
);

create table if not exists `seller_address` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `seller_id` bigint not null,
    `address_line1` varchar(255) not null,
    `address_line2` varchar(255),
    `city` varchar(100) not null,
    `state` varchar(100) not null,
    `country` varchar(100) not null,
    `postal_code` varchar(20) not null,
    `is_return_address` boolean default false,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`seller_id`) references `seller_profile` (`id`)
);

create table if not exists `seller_inventory` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `seller_id` bigint not null,
    `product_id` bigint not null,
    `stock_quantity` bigint not null default 0,
    `price` decimal(10, 2) not null,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`seller_id`) references `seller_profile` (`id`),
    foreign key (`product_id`) references `product` (`id`)
);

create table if not exists `seller_profile` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint not null,
    `company_name` varchar(255) not null,
    `tax_identifier` varchar(100),
    `rating` decimal(3, 2) default 0.0,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`)
);

create table if not exists `seller_rating` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `seller_id` bigint not null,
    `rating` decimal(3, 2) not null,
    `review_count` bigint not null default 0,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`seller_id`) references `seller_profile` (`id`)
);

create table if not exists `shipment` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `order_id` bigint not null,
    `date` datetime default null,
    `estimated_delivery` datetime,
    `delivered_date` datetime default null,
    `status` enum('delivered', 'in_transit', 'pending', 'returned') default 'pending',
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`order_id`) references `order` (`id`)
);

create table if not exists `shipment_item` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `shipment_id` bigint not null,
    `order_item_id` bigint not null,
    `quantity` int not null,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`shipment_id`) references `shipment` (`id`),
    foreign key (`order_item_id`) references `order_item` (`id`)
);

create table if not exists `user_activity` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint not null,
    `activity_type` enum('add_to_cart', 'checkout', 'login', 'logout', 'search', 'view_product') not null,
    `activity_time` datetime not null default current_timestamp,
    `metadata` text,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`)
);

create table if not exists `user_address` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint not null,
    `address_line1` varchar(255) not null,
    `address_line2` varchar(255),
    `city` varchar(100) not null,
    `state` varchar(100) not null,
    `country` varchar(100) not null,
    `postal_code` varchar(20) not null,
    `is_default` boolean default false,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`)
);

create table if not exists `user_cart` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint not null,
    `product_id` bigint not null,
    `quantity` int not null default 1,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`),
    foreign key (`product_id`) references `product` (`id`)
);

create table if not exists `user_profile` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `username` varchar(50) not null unique key,
    `email` varchar(255) not null unique key,
    `password_hash` varchar(255) not null,
    `first_name` varchar(100),
    `last_name` varchar(100),
    `date_of_birth` date,
    `phone_number` varchar(20),
    `status` enum('active', 'banned', 'inactive') default 'active',
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp
);

create table if not exists `user_session` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint not null,
    `session_token` varchar(255) not null unique key,
    `expires_at` datetime not null,
    `ip_address` varchar(45),
    `agent` varchar(255),
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`)
);

create table if not exists `user_wishlist` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `user_id` bigint not null,
    `product_id` bigint not null,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp,
    foreign key (`user_id`) references `user_profile` (`id`),
    foreign key (`product_id`) references `product` (`id`)
);

create table if not exists `warehouse` (
    `id` bigint not null auto_increment primary key,
    `uuid` varchar(36) not null unique key,
    `name` varchar(255) not null,
    `address_line1` varchar(255) not null,
    `address_line2` varchar(255),
    `city` varchar(100) not null,
    `state` varchar(100) not null,
    `country` varchar(100) not null,
    `postal_code` varchar(20) not null,
    `date_created` datetime not null default current_timestamp,
    `date_updated` datetime default null on update current_timestamp
);
